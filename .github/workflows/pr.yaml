# This is a basic workflow to run tests on commit/PRs on develop

name: pr

# Controls when the action will run.
on:
  pull_request:
    branches:
      - develop

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs
# that can run sequentially or in parallel
jobs:
  run_test:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be
    # executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id:          ${{ secrets.GCP_SERVICE_ACCOUNT_PROJECT_ID }}
          export_default_credentials: true

      - name: Build tests
        run: 'EXCLUDE_DOCUMENTATION=1 NO_PUSH=1 BRANCH_NAME=${{ github.event.pull_request.head.ref }} ./ci.sh'
        shell: bash

      - name: Run Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          cd test
          BRANCH_NAME=${{ github.event.pull_request.head.ref }} ./run_test_container.sh

  run_test_conda_gpu:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be
    # executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id:          ${{ secrets.GCP_SERVICE_ACCOUNT_PROJECT_ID }}
          export_default_credentials: true

      - name: Build tests on pytorch GPU image
        run: |
          mkdir -p docker/pytorch-gpu/aperturedata
          cp -r aperturedb setup.py README.md test requirements.txt docker/pytorch-gpu/aperturedata
          bash docker/pytorch-gpu/build.sh
        shell: bash

      - name: Run Tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          cd test
          ./run_test_container.sh aperturedata/aperturedb-pytorch-gpu

  build_images:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE,
      # so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build documentation
        run: 'EXCLUDE_TESTING=1 NO_PUSH=1 BRANCH_NAME=${{ github.event.pull_request.head.ref }} ./ci.sh'
        shell: bash
